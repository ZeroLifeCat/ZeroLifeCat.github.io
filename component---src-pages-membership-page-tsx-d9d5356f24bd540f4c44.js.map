{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/components/CollapsableTablingTable.js","webpack:///./src/pages/Membership-Page.tsx","webpack:///./src/components/seo.js"],"names":["_assertThisInitialized","self","ReferenceError","tablingTimes","tablingTimesByTerm","TablingTimes","Timeslots","forEach","tablingTime","term","Term","push","key","id","Date","Time","Location","Table","props","sty","display","isCollapsed","style","CollapsableTablingTable","state","collapsed","image","changeCollapsedState","bind","this","setState","render","maxWidth","onMouseDown","name","React","Component","slideIndex","MembershipPage","componentDidMount","showSlides","n","i","slides","document","getElementsByClassName","dots","length","setAttribute","className","replace","styleNEW","getAttribute","styles","split","startsWith","plusSlides","currentSlide","bannerName","title","textAlign","onClick","e","SEO","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-membership-page-tsx-d9d5356f24bd540f4c44.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from \"react\"\r\nimport TablingTimes from \"../texts/Tabling_Time.json\"\r\nimport Image from \"./image\"\r\n\r\nvar tablingTimesByTerm = createTimesByTerm(TablingTimes.Timeslots)\r\n\r\nfunction createTimesByTerm(tablingTimes) {\r\n  var tablingTimesByTerm = []\r\n  tablingTimes.forEach(tablingTime => {\r\n    var term = tablingTime.Term\r\n    if (!tablingTimesByTerm[term]) {\r\n      tablingTimesByTerm[term] = []\r\n    }\r\n    tablingTimesByTerm[term].push(\r\n      <tr key={tablingTime.id}>\r\n        <td>{tablingTime.Date}</td>\r\n        <td>{tablingTime.Time}</td>\r\n        <td>{tablingTime.Location}</td>\r\n      </tr>\r\n    )\r\n  })\r\n  return tablingTimesByTerm\r\n}\r\n\r\nfunction createTableCells(term) {\r\n  return tablingTimesByTerm[term]\r\n}\r\n\r\nfunction Table(props) {\r\n  var displayProperty\r\n  if (props.isCollapsed) {\r\n    displayProperty = \"none\"\r\n  } else {\r\n    displayProperty = \"table\"\r\n  }\r\n  var sty = { display: displayProperty }\r\n  return (\r\n    <table style={sty}>\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Time</th>\r\n          <th>Location</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{createTableCells(props.term)}</tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nclass CollapsableTablingTable extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      collapsed: true,\r\n      image:\"DropDownButton\",\r\n    }\r\n    this.changeCollapsedState = this.changeCollapsedState.bind(this)\r\n  }\r\n\r\n  changeCollapsedState() {\r\n    this.setState(state => {\r\n      if(state.collapsed)\r\n       return { collapsed: false,image:\"DropDownButton_Collapse\"};\r\n      else\r\n        return {collapsed: true,image:\"DropDownButton\"};})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{this.props.term + \"Term\"}</div>\r\n        <div style={{ maxWidth: \"50px\" }}>\r\n          <a onMouseDown={this.changeCollapsedState}>\r\n            <Image name={this.state.image} />\r\n          </a>\r\n        </div>\r\n        <Table isCollapsed={this.state.collapsed} term={this.props.term} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CollapsableTablingTable\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Image from \"../components/image\"\r\nimport CollapsableTablingTable from \"../components/CollapsableTablingTable\"\r\nimport \"../styles/Membership-Page.css\"\r\n\r\n\r\n\r\nvar slideIndex = 1;\r\nclass MembershipPage extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.showSlides(1);\r\n  }\r\n\r\n  showSlides(n) {\r\n\r\n    var i = 0;\r\n    var slides = document.getElementsByClassName(\"mySlides\");\r\n    var dots = document.getElementsByClassName(\"dot\");\r\n    if (n > slides.length) { slideIndex = 1 }\r\n    if (n < 1) { slideIndex = slides.length }\r\n    for (i = 0; i < slides.length; i++) {\r\n      slides[i].setAttribute(\"style\", \"display:none;\");\r\n    }\r\n\r\n    for (i = 0; i < dots.length; i++) {\r\n      dots[i].className = dots[i].className.replace(\" active\", \"\");\r\n    }\r\n    var styleNEW = slides[slideIndex - 1].getAttribute(\"style\");\r\n    var styles = styleNEW.split(\";\");\r\n    styleNEW = \"\";\r\n    for (i = 0; i < styles.length; i++) {\r\n      if (styles[i].startsWith(\"display\"))\r\n        styles[i] = \"display:block\";\r\n      styleNEW += styles[i] + \";\";\r\n    }\r\n    slides[slideIndex - 1].setAttribute(\"style\", styleNEW);\r\n    dots[slideIndex - 1].className += \" active\";\r\n  }\r\n\r\n  plusSlides(n) {\r\n    this.showSlides(slideIndex += n);\r\n  }\r\n\r\n  currentSlide(n) {\r\n    this.showSlides(slideIndex = n);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Layout bannerName=\"Membership_Page_Banner\">\r\n        <SEO title=\"CSSA-Family\" />\r\n        <div>\r\n          <h1>Benefits</h1>\r\n          <Image name=\"Benefits\" />\r\n          <Image name=\"Membership_Benefits_2\" />\r\n          <Image name=\"Membership_Benefits_3\" />\r\n        </div>\r\n        <div>\r\n          <h1>Tabling Time</h1>\r\n          <CollapsableTablingTable term=\"Fall\" />\r\n          <CollapsableTablingTable term=\"Winter\" />\r\n        </div>\r\n        <div>\r\n        <h1>Card Design</h1>\r\n        <div className=\"slideshow-container\">\r\n          <div className=\"mySlides fade\" style={{}}>\r\n            <div className=\"numbertext\">1 / 2</div>\r\n            <Image name=\"MembershipCardWatermelon\" />\r\n          </div>\r\n          <div className=\"mySlides fade\" style={{}}>\r\n            <div className=\"numbertext\">2 / 2</div>\r\n            <Image name=\"MembershipCardPineapple\" />\r\n          </div>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <span className=\"dot\" onClick={(e) => this.currentSlide(1)}></span>\r\n            <span className=\"dot\" onClick={(e) => this.currentSlide(2)}></span>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"series-name-container\">\r\n          <div className=\"series-name-container vertical-align\">\r\n            <h3>2018-2019</h3>\r\n            <h3>Season of Fruits</h3>\r\n          </div>\r\n        </div>\r\n\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MembershipPage","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}